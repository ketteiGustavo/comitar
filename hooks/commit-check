#!/usr/bin/env bash

# Path to the commit message file (provided by Git).
COMMIT_MSG_FILE=$1

# Read the commit message from the file.
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Find project root to locate .comitar.json
GIT_ROOT=$(git rev-parse --show-toplevel 2>/dev/null)
if [[ -z "$GIT_ROOT" ]]; then
    echo "ERRO: Não é um repositório git."
    exit 1
fi

CONFIG_FILE="$GIT_ROOT/.comitar.json"

if [[ ! -f "$CONFIG_FILE" ]]; then
  echo "ERRO: Arquivo de configuração .comitar.json não encontrado no root do projeto ($GIT_ROOT)."
  exit 1
fi

# Check for jq
if ! command -v jq >/dev/null 2>&1; then
  echo "ERRO: O utilitário 'jq' é necessário para validar os tipos de commit e não foi encontrado."
  exit 1
fi

# Read types from .comitar.json using jq
default_types=$(jq -r '.default_types[].type' "$CONFIG_FILE" | tr '
' '|')
custom_types=$(jq -r '.custom_types[].type' "$CONFIG_FILE" | tr '
' '|')

# Combine all types
all_types="${default_types}${custom_types}"
# Remove trailing '|'
all_types=${all_types%|}

# Build the final regex
CONVENTIONAL_COMMIT_REGEX="^(:[^[:space:]]+: )?($all_types)(\([a-zA-Z0-9_.-]+\))?(!)?:\s.+$"

# Check if the commit message matches the regex
if ! [[ $COMMIT_MSG =~ $CONVENTIONAL_COMMIT_REGEX ]]; then
    echo "ERRO: A mensagem de commit não segue o formato do Conventional Commits."
    echo
    echo "O formato correto da mensagem de commit é obrigatório:"
    echo "  <tipo>(<escopo opcional>): <descrição>"
    echo
    echo "Os tipos válidos por padrão são:"
    echo "  feat:     Uma nova funcionalidade."
    echo "  fix:      Correção de um bug."
    echo "  docs:     Alterações na documentação."
    echo "  style:    Alterações de estilo de código (formatação, ponto-e-vírgula ausente, etc.)."
    echo "  refactor: Refatoração de código (nem corrige bug nem adiciona funcionalidade)."
    echo "  test:     Adicionar ou atualizar testes."
    echo "  chore:    Tarefas rotineiras como atualização de dependências ou ferramentas de build."
    echo "  build:    Alterações que afetam o sistema de build ou dependências externas."
    echo "  ci:       Alterações nos arquivos de configuração de CI ou scripts."
    echo "  perf:     Melhorias de desempenho."
    echo "  revert:   Reverter um commit anterior."
    echo
    echo "E foram encontrados os  tipos definidos em seu .comitar.json."
    echo "Tipos encontrados: ${all_types//|/, }"
    echo
    echo "Exemplos:"
    echo "  feat(auth): adicionar funcionalidade de login"
    echo "  fix(api)!: resolver problema de timeout"
    echo "  docs(readme): atualizar instruções de instalação"
    echo
    exit 1
fi

exit 0